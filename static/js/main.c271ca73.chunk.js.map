{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/Search-field/searchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filteredMonster","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,EAAM,SAAAC,GAEhB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,eACR,6BAAMJ,EAAMG,QAAQE,OACpB,4BAAIL,EAAMG,QAAQG,YCJZC,EAAS,SAACP,GAEpB,OADCQ,QAAQC,IAAIT,GAGb,qBAAKC,UAAU,YAAf,SAEOD,EAAMU,SAASC,KAAI,SAAAR,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCRbQ,G,MAAY,SAAC,GACzB,IAD0BC,EAC3B,EAD2BA,YAAYC,EACvC,EADuCA,aAEpC,OACC,8BACI,uBAAOb,UAAU,SAASc,KAAK,SAASF,YAAaA,EACrDG,SAAUF,QCmCLG,E,kDApCb,aAAc,IAAD,8BACX,gBAgBFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAfpC,EAAKC,MAAO,CACVb,SAAS,GACTU,YAAY,IALH,E,qDAUb,WACC,IAAD,OACEI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OACjEA,EAASC,UACRF,MAAK,SAAAG,GAAI,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,oBAMtC,WAAS,IAAD,EACwBC,KAAKN,MAA5Bb,EADD,EACCA,SAASU,EADV,EACUA,YACVU,EAAgBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC3CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAClD,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,CAAWY,YAAY,wBACvBC,aAAce,KAAKf,eACnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7BVI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c271ca73.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card-style.css';\r\nexport const Card= props =>\r\n{\r\n   return(<div className=\"card-container\">\r\n       <img src={`https://robohash.org/${props.monster.id}?set=set4`}></img>\r\n       <h2 >{props.monster.name}</h2>\r\n       <p>{props.monster.email}</p>\r\n    </div>);\r\n}","import React from 'react';\r\nimport './card-list-style.css'\r\nimport {Card} from '../card/card';\r\nexport const CardList=(props)=>{\r\n    console.log(props); \r\n   return (\r\n       \r\n   <div className=\"card-list\" >\r\n      {\r\n          props.monsters.map(monster =>\r\n         <Card key={monster.id} monster={monster}/>)\r\n     }\r\n   </div>)\r\n}\r\n\r\n","  import React from 'react';\r\nimport './search-field.css';\r\n  export const SearchBox = ({placeholder,handleChange})=>\r\n  {\r\n     return(\r\n      <div >\r\n          <input className=\"search\" type=\"search\" placeholder={placeholder}\r\n          onChange={handleChange}\r\n          ></input>\r\n\r\n      </div>\r\n\r\n     ); \r\n  }","import React from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/Search-field/searchBox';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n\n    this.state ={\n      monsters:[],\n      searchField:\"\",\n    };\n  \n  }\n  \n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=>\n    response.json())\n    .then(user=>this.setState({monsters:user})\n    );\n  }\n  handleChange=(e)=>{\n    this.setState({searchField:e.target.value});\n  }\n  render(){\n    const {monsters,searchField }=this.state;\n    const filteredMonster=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className='App'>\n        <SearchBox placeholder='Search kitty-monsters'\n        handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonster} > \n        \n        </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}